{"version":3,"sources":["components/Header/index.js","config/axios.js","api-calls/index.js","sagas/index.js","types/index.js","reducers/products-reducer.js","reducers/alert-reducer.js","reducers/index.js","store.js","actions/products-actions.js","components/Product/index.js","components/Products/index.js","actions/alert-actions.js","components/NewProduct/index.js","components/EditProduct/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","to","axiosClient","axios","create","baseURL","retrieveProductsDB","a","async","get","addProductDB","product","post","deleteProductDB","id","delete","editProductDB","put","retrieveProducts","retrieveProductsSaga","addProduct","addProductSaga","deleteProduct","deleteProductSaga","editProduct","editProductSaga","rootSaga","call","data","downloadProductsOkAction","downloadProductsErrorAction","takeEvery","action","addProductOkAction","Swal","fire","addProductErrorAction","icon","title","text","payload","deleteProductOkAction","deleteProductErrorAction","editProductOkAction","editProductErrorAction","all","initialState","products","error","loading","alert","combineReducers","state","type","filter","map","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","run","dispatch","downloadProductsOk","addProductError","editProductOk","Product","history","useHistory","name","price","confirmDeleteProduct","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","retrieveProductDelete","deleteProductAction","redirectionEdition","retrieveProductAction","retrieveProductEditAction","push","onClick","Products","useEffect","useSelector","length","key","showAlert","createAlert","Newproduct","useState","setName","setPrice","msg","onSubmit","event","preventDefault","trim","placeholder","onChange","target","min","Number","EditProduct","productEdit","setProduct","onChangeForm","editProductAction","App","exact","path","component","NewProduct","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50f94570.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <nav>\n      <div>\n        <h1>Juice store</h1>\n      </div>\n      <Link to={'/products/new'}>Add product</Link>\n    </nav>\n  )\n}\n\nexport default Header","import axios from 'axios'\n\nconst axiosClient = axios.create({\n  baseURL: 'http://localhost:4000/'\n})\n\nexport default axiosClient","import axiosClient from '../config/axios'\n\nexport async function retrieveProductsDB() {\n  return await axiosClient.get('/products')\n}\n\nexport async function addProductDB(product) {\n  return await axiosClient.post('/products', product)\n}\n\nexport async function deleteProductDB(id) {\n  return await axiosClient.delete(`/products/${id}`)\n}\n\nexport async function editProductDB(product) {\n  return await axiosClient.put(`/products/${product.id}`, product)\n}\n","import { put, takeEvery, all, call } from 'redux-saga/effects'\nimport Swal from 'sweetalert2'\nimport {\n  ADD_PRODUCT,\n  BEGIN_PRODUCTS_DOWNLOAD,\n  RETRIEVE_PRODUCT_DELETE,\n  BEGIN_EDIT_PRODUCT,\n} from '../types'\n\nimport {\n  downloadProductsOkAction,\n  downloadProductsErrorAction,\n  addProductOkAction,\n  addProductErrorAction,\n  deleteProductOkAction,\n  deleteProductErrorAction,\n  editProductOkAction,\n  editProductErrorAction\n} from '../actions/products-actions'\n\nimport {\n  retrieveProductsDB,\n  addProductDB,\n  deleteProductDB,\n  editProductDB\n} from '../api-calls'\n\n// Retrieve products\n// worker saga\nfunction* retrieveProducts() {\n  try {\n    const {data} = yield call(retrieveProductsDB)\n    yield downloadProductsOkAction(data)\n  } catch (error) {\n    yield put(downloadProductsErrorAction())\n  }\n}\n\n// watcher saga\nfunction* retrieveProductsSaga() {\n  yield takeEvery(BEGIN_PRODUCTS_DOWNLOAD, retrieveProducts)\n}\n\n\n// Create new product\n// worker saga\nfunction* addProduct(action) {\n  const product = action.product\n  try {\n    yield call(addProductDB, product)\n   /* const response = await axiosClient.post('/products', product)*/\n    yield addProductOkAction(product) // download actualized products\n    // Alert\n    Swal.fire(\n      'Correct',\n      'The product has been added successfully',\n      'success'\n    )\n  } catch (error) {\n    yield addProductErrorAction(true)\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: 'An error ocurred. Please, try it again.'\n    })\n  }\n}\n\n// watcher saga\nfunction* addProductSaga() {\n  yield takeEvery(ADD_PRODUCT, addProduct)\n}\n\n\n// Delete product\n// worker saga\nfunction* deleteProduct(action) {\n  const id = action.payload\n  try {\n    yield call(deleteProductDB, id)\n    yield deleteProductOkAction()\n    Swal.fire(\n      'Deleted!',\n      'The product has been deleted.',\n      'success'\n    )\n  } catch (error) {\n    yield deleteProductErrorAction()\n  }\n}\n\n// watcher saga\nfunction* deleteProductSaga() {\n  yield takeEvery(RETRIEVE_PRODUCT_DELETE, deleteProduct)\n}\n\n\n// Edit product\n// worker saga\nfunction* editProduct(action) {\n  const product = action.product\n  try {\n    yield call(editProductDB, product)\n    yield editProductOkAction(product)\n  } catch (error) {\n    yield editProductErrorAction()\n  }\n}\n\n// watcher saga\nfunction* editProductSaga() {\n  yield takeEvery(BEGIN_EDIT_PRODUCT, editProduct)\n}\n\n// Export all sagas\nexport default function* rootSaga() {\n  yield all([\n    retrieveProductsSaga(),\n    addProductSaga(),\n    deleteProductSaga(),\n    editProductSaga()\n  ])\n}\n","export const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const ADD_PRODUCT_OK = 'ADD_PRODUCT_OK'\nexport const ADD_PRODUCT_ERROR = 'ADD_PRODUCT_ERROR'\n\nexport const BEGIN_PRODUCTS_DOWNLOAD = 'BEGIN_PRODUCTS_DOWNLOAD'\nexport const PRODUCTS_DOWNLOAD_OK = 'PRODUCTS_DOWNLOAD_OK'\nexport const PRODUCTS_DOWNLOAD_ERROR = 'PRODUCTS_DOWNLOAD_ERROR'\n\nexport const RETRIEVE_PRODUCT_DELETE = 'RETRIEVE_PRODUCT_DELETE'\nexport const PRODUCT_DELETED_OK = 'PRODUCT_DELETED_OK'\nexport const PRODUCT_DELETED_ERROR = 'PRODUCT_DELETED_ERROR'\n\nexport const RETRIEVE_PRODUCT_EDIT= 'RETRIEVE_PRODUCT_EDITED'\nexport const BEGIN_EDIT_PRODUCT = 'BEGIN_EDIT_PRODUCT'\nexport const PRODUCT_EDITED_OK = 'PRODUCT_EDITED_OK'\nexport const PRODUCT_EDITED_ERROR = 'PRODUCT_EDITED_ERROR'\n\nexport const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n","import {\n  ADD_PRODUCT,\n  ADD_PRODUCT_OK,\n  ADD_PRODUCT_ERROR,\n  BEGIN_PRODUCTS_DOWNLOAD,\n  PRODUCTS_DOWNLOAD_OK,\n  PRODUCTS_DOWNLOAD_ERROR,\n  RETRIEVE_PRODUCT_DELETE,\n  PRODUCT_DELETED_OK,\n  PRODUCT_DELETED_ERROR,\n  RETRIEVE_PRODUCT_EDIT,\n  BEGIN_EDIT_PRODUCT,\n  PRODUCT_EDITED_OK,\n  PRODUCT_EDITED_ERROR\n} from '../types'\n\nconst initialState = {\n  products: [],\n  error: false,\n  loading: false,\n  deleteProduct: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n\n    case BEGIN_PRODUCTS_DOWNLOAD:\n    case ADD_PRODUCT:\n    case BEGIN_EDIT_PRODUCT:\n      return {\n        ...state,\n        loading: action.payload,\n        product: action.product\n      }\n\n    case ADD_PRODUCT_OK:\n      return {\n        ...state,\n        loading: false\n      }\n\n    case ADD_PRODUCT_ERROR:\n    case PRODUCTS_DOWNLOAD_ERROR:\n    case PRODUCT_DELETED_ERROR:\n    case PRODUCT_EDITED_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n\n    case PRODUCTS_DOWNLOAD_OK:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        products: action.payload\n      }\n\n    case RETRIEVE_PRODUCT_DELETE:\n      return {\n        ...state,\n        deleteProduct: action.payload\n      }\n\n    case PRODUCT_DELETED_OK:\n      return {\n        ...state,\n        products: state.products.filter(product => product.id !== state.deleteProduct),\n        deleteProduct: null\n      }\n\n    case RETRIEVE_PRODUCT_EDIT:\n      return {\n        ...state,\n        editProduct: action.payload\n      }\n\n    case PRODUCT_EDITED_OK:\n      return {\n        ...state,\n        editProduct: null,\n        products: state.products.map(product =>\n          product.id === action.payload.id ? product = action.payload : product\n        )\n      }\n\n    default:\n      return state\n  }\n}","import {\n  SHOW_ALERT,\n  HIDE_ALERT\n} from '../types'\n\n// every reducer has it own state\nconst initialState = {\n  alert: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SHOW_ALERT:\n      return {\n        ...state,\n        alert: action.payload\n      }\n\n    case HIDE_ALERT:\n      return {\n        ...state,\n        alert: null\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport productsReducer from './products-reducer'\nimport alertReducer from './alert-reducer'\n\nexport default combineReducers({\n  products: productsReducer,\n  alert: alertReducer\n})\n\n// If we are going to have several reducers, we must use combine them because there can only be one\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas'\nimport reducer from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  )\n)\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import {\n  ADD_PRODUCT,\n  ADD_PRODUCT_ERROR,\n  BEGIN_PRODUCTS_DOWNLOAD,\n  PRODUCTS_DOWNLOAD_OK,\n  PRODUCTS_DOWNLOAD_ERROR,\n  RETRIEVE_PRODUCT_DELETE,\n  PRODUCT_DELETED_OK,\n  PRODUCT_DELETED_ERROR,\n  RETRIEVE_PRODUCT_EDIT,\n  BEGIN_EDIT_PRODUCT,\n  PRODUCT_EDITED_OK,\n  PRODUCT_EDITED_ERROR\n} from '../types'\nimport store from '../store'\n\n\n// Download products actions\nconst downloadProducts = () => ({\n  type: BEGIN_PRODUCTS_DOWNLOAD,\n  payload: true\n})\n\nconst downloadProductsOk = products => ({\n  type: PRODUCTS_DOWNLOAD_OK,\n  payload: products\n})\n\nconst downloadProductsError = () => ({\n  type: PRODUCTS_DOWNLOAD_ERROR,\n  payload: true\n})\n\nexport const downloadProductsAction = () => store.dispatch(downloadProducts())\n\nexport const downloadProductsOkAction = products => store.dispatch(downloadProductsOk(products))\n\nexport const downloadProductsErrorAction = () => store.dispatch(downloadProductsError())\n\n\n// Create new products\nconst addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: true,\n  product: product\n})\n\nconst addProductOk = () => ({\n  type: BEGIN_PRODUCTS_DOWNLOAD,\n  payload: true\n})\n\nconst addProductError = state => ({\n  type: ADD_PRODUCT_ERROR,\n  payload: state\n})\n\nexport const addProductAction = product => store.dispatch(addProduct(product))\n\nexport const addProductOkAction = () => store.dispatch(addProductOk())\n\nexport const addProductErrorAction = state => store.dispatch(addProductError(state))\n\n\n// Delete products\nconst retrieveProductDelete = id => ({\n  type: RETRIEVE_PRODUCT_DELETE,\n  payload: id\n})\n\nconst deleteProductOk = () => ({\n  type: PRODUCT_DELETED_OK\n})\n\nconst deleteProductError = () => ({\n  type: PRODUCT_DELETED_ERROR,\n  payload: true\n})\n\nexport const deleteProductAction = id => store.dispatch(retrieveProductDelete(id))\n\nexport const deleteProductOkAction = () => store.dispatch(deleteProductOk())\n\nexport const deleteProductErrorAction = () => store.dispatch(deleteProductError())\n\n\n// Edit product\nconst retrieveProductAction = product => ({\n  type: RETRIEVE_PRODUCT_EDIT,\n  payload: product\n})\n\nconst editProduct = product => ({\n  type: BEGIN_EDIT_PRODUCT,\n  product: product\n})\n\nconst editProductOk = product => ({\n  type: PRODUCT_EDITED_OK,\n  payload: product\n})\n\nconst editProductError = () => ({\n  type: PRODUCT_EDITED_ERROR,\n  payload: true\n})\n\nexport const retrieveProductEditAction = product => store.dispatch(retrieveProductAction(product))\n\nexport const editProductAction = product => store.dispatch(editProduct(product))\n\nexport const editProductOkAction = product => store.dispatch(editProductOk(product))\n\nexport const editProductErrorAction = () => store.dispatch(editProductError())\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport { deleteProductAction, retrieveProductEditAction } from '../../actions/products-actions'\n\nconst Product = (product) => {\n  const history = useHistory()\n  const { name, price, id } = product\n\n  const confirmDeleteProduct = id => {\n    // ask the user for confirmation\n    Swal.fire({\n      title: 'Are you sure you want to delete the product?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      result.value && deleteProductAction(id)\n    })\n  }\n\n  // function that redirects automátically, is better than 'Link'\n  const redirectionEdition = product => {\n    retrieveProductEditAction(product)\n    history.push(`products/edit/${id}`)\n  }\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{price}</td>\n      <td>{id}</td>\n      <td>\n        <button\n          type='button'\n          onClick={() => redirectionEdition(product)}\n        >Edit</button>\n        <button\n          type='button'\n          onClick={() => confirmDeleteProduct(id)}\n        >Delete</button>\n      </td>\n    </tr>\n  )\n}\n\nexport default Product\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { downloadProductsAction } from '../../actions/products-actions'\nimport Product from '../Product'\n\nconst Products = () => {\n  useEffect(() => {\n    (async () => await downloadProductsAction())()\n  }, [])\n\n  let products = useSelector(state => state.products.products)\n  const error = useSelector(state => state.products.error)\n  const loading = useSelector(state => state.products.loading)\n\n  return (\n    <div>\n      <h1>Products</h1>\n      { error ? <p>An error ocurred</p> : null }\n      { loading ? <p>Loading...</p> : null }\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Id</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          { products.length === 0 ? 'No products yet.' : (\n            products.map(product =>\n              <Product\n                key={product.id}\n                name={product.name}\n                price={product.price}\n                id={product.id}\n              />\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Products\n","import {\n  SHOW_ALERT,\n  HIDE_ALERT\n} from '../types'\nimport store from '../store'\n\n// Show alert\nconst createAlert = alert => ({\n  type: SHOW_ALERT,\n  payload: alert\n})\n\nexport const showAlert = alert => store.dispatch(createAlert(alert))\n\n// Hide alert\nconst hideAlert = () => ({\n  type: HIDE_ALERT,\n  payload: null\n})\n\nexport const hideAlertAction = () => store.dispatch(hideAlert())\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { addProductAction } from '../../actions/products-actions'\nimport { showAlert, hideAlertAction } from '../../actions/alert-actions'\n\nconst Newproduct = ({ history }) => {\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n\n  // access the store state\n  const loading = useSelector(state => state.products.loading) // true o false\n  const error = useSelector(state => state.products.error) // true o false\n  const alert = useSelector(state => state.alert.alert)\n\n  const submitNewProduct = async event => {\n    event.preventDefault()\n    // validate form\n    if(name.trim() === '' || price <= 0) {\n      const alert = {\n        msg: 'All fields are required.'\n      }\n      showAlert(alert)\n      return\n    }\n    // if no errors\n    hideAlertAction()\n    // create new product\n    await addProductAction({ name, price })\n    // redirect to main component\n    history.push('/')\n  }\n\n  return (\n    <div>\n      <h1>Add new product</h1>\n      { alert ? <p>{alert.msg}</p> : null }\n      <form onSubmit={submitNewProduct} >\n        <section>\n          <label>Product name</label>\n          <input\n            type='text'\n            placeholder='Product name'\n            name='name'\n            value={name}\n            onChange={event => setName(event.target.value)}\n          />\n        </section>\n        <section>\n          <label>Product price</label>\n          <input\n            type='number'\n            name='price'\n            min='0'\n            value={price}\n            onChange={event => setPrice(Number(event.target.value))}\n          />\n        </section>\n        <button >Add new</button>\n      </form>\n      { loading ? <p>Loading...</p> : null }\n      { error ? <p>Ups! An error ocurred.</p> : null }\n    </div>\n  )\n}\n\nexport default Newproduct","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { editProductAction } from '../../actions/products-actions'\nimport { useHistory } from 'react-router-dom'\n\nconst EditProduct = () => {\n  const history = useHistory()\n  const productEdit = useSelector(state => state.products.editProduct)\n  const [product, setProduct] = useState({\n    name: '',\n    price: ''\n  })\n\n  // fill state\n  useEffect(() => {\n    setProduct(productEdit)\n  }, [productEdit])\n\n\n  const submitEditProduct = event => {\n    event.preventDefault()\n    editProductAction(product)\n    history.push('/')\n  }\n\n  // read data from form\n  const onChangeForm = event => {\n    setProduct({\n      ...product,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  return (\n    <div>\n      <form\n        onSubmit={submitEditProduct}\n      >\n        <h1>Edit product</h1>\n        <section>\n          <label>Product name</label>\n          <input\n            type='text'\n            name='name'\n            value={product.name}\n            onChange={onChangeForm}\n          />\n        </section>\n        <section>\n          <label>Product price</label>\n          <input\n            type='number'\n            name='price'\n            min='0'\n            value={product.price}\n            onChange={onChangeForm}\n          />\n        </section>\n        <button>Save changes</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditProduct","import React from 'react'\nimport Header from './components/Header'\nimport Products from './components/Products'\nimport NewProduct from './components/NewProduct'\nimport EditProduct from './components/EditProduct'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={ store }>\n        <Header />\n        <div>\n          <Switch>\n            <Route exact path='/' component={Products} />\n            <Route exact path='/products/new' component={NewProduct} />\n            <Route exact path='/products/edit/:id' component={EditProduct} />\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}